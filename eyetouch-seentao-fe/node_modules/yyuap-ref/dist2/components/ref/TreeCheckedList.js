'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _icon = require('../../bee/icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

//import ScrollArea from 'react-scrollbar';


var TreeCheckedList = function (_Component) {
  _inherits(TreeCheckedList, _Component);

  function TreeCheckedList(props) {
    _classCallCheck(this, TreeCheckedList);

    var _this = _possibleConstructorReturn(this, (TreeCheckedList.__proto__ || Object.getPrototypeOf(TreeCheckedList)).call(this, props));

    _this.state = {
      data: []
    };
    return _this;
  }

  _createClass(TreeCheckedList, [{
    key: 'removeOne',
    value: function removeOne(item, event) {
      var removeOne = this.props.removeOne;
      removeOne(item);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var data = this.props.selectedArray;
      var clearAll = this.props.clearAll;
      var loop = function loop(datas) {
        return datas.map(function (item) {
          return _react2.default.createElement(
            'div',
            { className: 'item', key: item.refpk },
            item.refname,
            _react2.default.createElement(
              'span',
              { className: 'remove', onClick: _this2.removeOne.bind(_this2, item) },
              _react2.default.createElement(_icon2.default, {
                type: 'uf-del' })
            )
          );
        });
      };
      var center = { textAlign: "center", marginTop: 20 };
      return _react2.default.createElement(
        'div',
        { className: 'c-checked' },
        _react2.default.createElement(
          'div',
          { className: 'head' },
          '\u5DF2\u9009\u62E9(',
          _react2.default.createElement(
            'span',
            null,
            data.length
          ),
          ')',
          data.length ? _react2.default.createElement(
            'span',
            { className: 'clear', onClick: clearAll },
            '\u6E05\u9664'
          ) : null
        )
      );
    }
  }]);

  return TreeCheckedList;
}(_react.Component);

exports.default = TreeCheckedList;
module.exports = exports['default'];