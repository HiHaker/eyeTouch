'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTableData = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _utils = require('../utils');

var getTableBar = function getTableBar(TableBarUrl, _ref) {
  var param = _ref.param;
  return (0, _utils.fetchJ)(TableBarUrl, _extends({}, param));
};
var getTableBody = function getTableBody(TableBodyUrl, _ref2) {
  var _ref2$activepage = _ref2.activepage,
      activepage = _ref2$activepage === undefined ? 0 : _ref2$activepage,
      _ref2$activekey = _ref2.activekey,
      activekey = _ref2$activekey === undefined ? null : _ref2$activekey,
      _ref2$searchvalue = _ref2.searchvalue,
      searchvalue = _ref2$searchvalue === undefined ? '' : _ref2$searchvalue,
      param = _ref2.param;
  return (0, _utils.fetchJ)(TableBodyUrl, _extends({}, param, {
    'refClientPageInfo.currPageIndex': activepage,
    'refShowClassCode': activekey,
    content: searchvalue
  }));
};
var getTableData = exports.getTableData = function getTableData(TableBarUrl, TableBodyUrl, value) {
  return Promise.all([getTableBar(TableBarUrl, value), getTableBody(TableBodyUrl, value)]);
};