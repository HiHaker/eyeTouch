'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTreeTableData = exports.getTree = exports.getTreeDateList = exports.getTreeList = exports.getSearchList = exports.getRefInfo = exports.getTableData = exports.getList = undefined;

var _utils = require('./utils');

var tabBarConfig = '/ref/iref_ctr/refInfo';
var config = '/ref/diwork/iref_ctr';
//refCode=test_common
var getList = exports.getList = function getList(refCode) {
  return (0, _utils.fetchJ)(config + '/commonRefsearch', {
    refCode: refCode
  });
};
//获取table数据接口--start
var getTableBar = function getTableBar(_ref) {
  var refCode = _ref.refCode;
  return (0, _utils.fetchJ)(tabBarConfig, {
    refCode: refCode
  });
};
var getTableBody = function getTableBody(_ref2) {
  var refCode = _ref2.refCode,
      _ref2$activepage = _ref2.activepage,
      activepage = _ref2$activepage === undefined ? 0 : _ref2$activepage,
      _ref2$activekey = _ref2.activekey,
      activekey = _ref2$activekey === undefined ? null : _ref2$activekey,
      _ref2$searchvalue = _ref2.searchvalue,
      searchvalue = _ref2$searchvalue === undefined ? '' : _ref2$searchvalue,
      key = _ref2.key;
  return (0, _utils.fetchJ)(config + '/commonRefsearch', {
    refCode: refCode,
    'refClientPageInfo.currPageIndex': activepage,
    'refShowClassCode': activekey,
    content: searchvalue,
    key: key
  });
};
var getTableData = exports.getTableData = function getTableData(value) {
  return Promise.all([getTableBar(value), getTableBody(value)]);
};
//获取table数据接口--end

var getRefInfo = exports.getRefInfo = function getRefInfo(refCode) {
  return (0, _utils.fetchJ)(config + '/refInfo', { refCode: refCode });
};

var getSearchList = exports.getSearchList = function getSearchList(refCode, content) {
  return (0, _utils.fetchJ)(config + '/filterRefJSON', {
    refCode: refCode,
    content: content,
    refModelUrl: 'http://workbench.yyuap.com/ref/testref_grid_ctr/'
  });
};
var getTreeList = exports.getTreeList = function getTreeList(param, content) {
  return (0, _utils.fetchJ)(config + '/blobRef', Object.assign(param, { content: content }));
};
// export const getTreeList = () =>get('getTreeData',{refCode:'123'});
//testTreeTable
var getTreeDateList = exports.getTreeDateList = function getTreeDateList(value) {
  return (0, _utils.get)('getTableData', {
    refCode: value.refCode,
    content: value.searchvalue,
    key: value.key,
    activepage: value.activepage
  });
};

// 树卡型 树的数据接口
var newConfig = '/ref/rest/iref_ctr';
var newtabBarConfig = '/ref/rest/iref_ctr/refInfo';
var getTree = exports.getTree = function getTree(_ref3) {
  var refCode = _ref3.refCode,
      type = _ref3.type;
  return (0, _utils.fetchJ)(newConfig + '/blobRefTree', {
    transmitParam: type,
    refCode: refCode,
    refModelUrl: 'http://workbench.yyuap.com/ref/rest/testref_ctr/'
  });
};

var getTableBar1 = function getTableBar1(_ref4) {
  var refCode = _ref4.refCode;
  return (0, _utils.fetchJ)(newtabBarConfig, {
    refCode: refCode
  });
};
var getTableBody1 = function getTableBody1(_ref5) {
  var refCode = _ref5.refCode,
      _ref5$activepage = _ref5.activepage,
      activepage = _ref5$activepage === undefined ? 0 : _ref5$activepage,
      _ref5$activekey = _ref5.activekey,
      activekey = _ref5$activekey === undefined ? null : _ref5$activekey,
      _ref5$searchvalue = _ref5.searchvalue,
      searchvalue = _ref5$searchvalue === undefined ? '' : _ref5$searchvalue,
      key = _ref5.key;
  return (0, _utils.fetchJ)(newConfig + '/blobRefTreeGrid', {
    refCode: refCode,
    'refClientPageInfo.currPageIndex': activepage,
    'refShowClassCode': activekey,
    content: searchvalue,
    id: key,
    refModelUrl: 'http://workbench.yyuap.com/ref/rest/testref_ctr/'
  });
};
var getTreeTableData = exports.getTreeTableData = function getTreeTableData(value) {
  return Promise.all([getTableBar1(value), getTableBody1(value)]);
};